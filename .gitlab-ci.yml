stages:
  - check
  - build
  - test

variables:
  GIT_SUBMODULE_STRATEGY: recursive

.rust-default:
  image: lukasdoe123/wasm-rt-rust-llvm-img:1.78
  tags:
    - lukas-debian-runner
  interruptible: true
  timeout: 5m

check:
  extends: .rust-default
  stage: check
  variables:
    RUSTFLAGS: "-Dwarnings"
  script:
    - 'cargo clippy
        --color always
        --verbose
        --all-targets
        --all-features
        --message-format=json
        | gitlab-report -p clippy > code-quality-report.json'
  allow_failure: true
  artifacts:
    when: always
    reports:
      codequality: code-quality-report.json

build:
  extends: .rust-default
  stage: build
  script:
    - 'cargo build
        --release
        --verbose
        --color always'
  artifacts:
    paths:
      - "target/*"

test:
  extends: .rust-default
  stage: test
  needs: [ build ]
  variables:
    LLVM_PROFILE_FILE: "coverage-%p-%m.profraw"
    RUSTFLAGS: "-Cinstrument-coverage"
  script:
    - 'cargo +nightly test
        --verbose
        --color always
        --all-features
        --no-fail-fast
        --
        -Z unstable-options
        --format json
        | gitlab-report -p test > results.xml'
  after_script:
    - 'grcov .
        --binary-path ./target/debug/
        --source-dir .
        --output-type cobertura
        --output-path coverage.xml
        --branch
        --ignore-not-existing
        --ignore "/*"'
    - |-
        xmllint --xpath "concat('Coverage: ', 100 * string(//coverage/@line-rate), '%')" coverage.xml
  coverage: '/Coverage: \d+(?:\.\d+)?/'
  artifacts:
    when: always
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
      junit: results.xml
